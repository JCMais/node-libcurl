version: 2.1

# aliases:
#   # add deps on ubuntu img
#   - &install-deps
#     # update automake
#     - run: |
#         wget ftp://ftp.gnu.org/gnu/automake/automake-1.16.1.tar.gz &> /dev/null
#         tar -xzf automake-1.16.1.tar.gz && cd automake-1.16.1
#         ./configure && make && sudo make install
#     # add missing packages
#     - run: sudo apt-get install texinfo gperf ruby-ronn cmake

executors:
  debian:
    docker:
      - image: jonathancardoso/debian-ci
    environment:
      RECONFIGURE_NGHTTP2: "true"
      BASH_ENV: "/home/circleci/.bashrc"
  alpine:
    docker:
      - image: jonathancardoso/alpine-ci

orbs:
  build-addon-alpine-and-publish:
    jobs:
      build-addon:
        # https://circleci.com/docs/2.0/reusing-config/#parameter-syntax
        parameters:
          node-version:
            description: Version of Node.js
            default: ""
            type: string
          electron-version:
            description: Version of Node.js
            default: ""
            type: string
          nwjs-version:
            description: Version of Nw.js
            default: ""
            type: string
          e:
            type: executor
          brotli-version:
            type: string
            default: "1.0.7"
          libcurl-version:
            type: string
          libidn2-version:
            type: string
            default: "2.1.1"
          libssh2-version:
            type: string
            default: "1.8.2"
          libunistring-version:
            type: string
            default: "0.9.10"
          ncurses-version:
            type: string
            default: "6.1"
          nghttp2-version:
            type: string
          openldap-version:
            type: string
            default: "2.4.47"
          openssl-version:
            type: string
          zlib-version:
            type: string
            default: "1.2.11"
          before-build:
            description: "Steps that will be executed before the build"
            type: steps
            default: []
          after-build:
            description: "Steps that will be executed before the build"
            type: steps
            default: []
        executor: << parameters.e >>
        steps:
          - checkout
          - when:
              condition: <<parameters.node-version>>
              steps:
                - run: |
                    if [ -x "$(command -v nvm)" ]; then
                      nvm use <<parameters.node-version>>
                    else
                      [ -f /usr/local/bin/node<<parameters.node-version>> ] && ln -s /usr/local/bin/node<<parameters.node-version>> /usr/local/bin/node || true
                    fi
          - run:
              name: Setup Environment Variables
              command: |
                echo 'export ELECTRON_VERSION="<<parameters.electron-version>>"' >> $BASH_ENV
                echo 'export NWJS_VERSION="<<parameters.nwjs-version>>"' >> $BASH_ENV
                echo 'export BROTLI_RELEASE="<<parameters.brotli-version>>"' >> $BASH_ENV
                echo 'export LATEST_LIBCURL_RELEASE="<<parameters.libcurl-version>>"' >> $BASH_ENV
                echo 'export LIBCURL_RELEASE="<<parameters.libcurl-version>>"' >> $BASH_ENV
                echo 'export LIBIDN2_RELEASE="<<parameters.libidn2-version>>"' >> $BASH_ENV
                echo 'export LIBSSH2_RELEASE="<<parameters.libssh2-version>>"' >> $BASH_ENV
                echo 'export LIBUNISTRING_RELEASE="<<parameters.libunistring-version>>"' >> $BASH_ENV
                echo 'export NCURSES_RELEASE="<<parameters.ncurses-version>>"' >> $BASH_ENV
                echo 'export NGHTTP2_RELEASE="<<parameters.nghttp2-version>>"' >> $BASH_ENV
                echo 'export OPENLDAP_RELEASE="<<parameters.openldap-version>>"' >> $BASH_ENV
                echo 'export OPENSSL_RELEASE="<<parameters.openssl-version>>"' >> $BASH_ENV
                echo 'export ZLIB_RELEASE="<<parameters.zlib-version>>"' >> $BASH_ENV
          ####
          # Restore caches
          ###
          - run:
              name: Create cache key file
              command: |
                echo "$BROTLI_RELEASE" >> _libs_versions
                echo "$LIBCURL_RELEASE" >> _libs_versions
                echo "$LIBIDN2_RELEASE" >> _libs_versions
                echo "$LIBSSH2_RELEASE" >> _libs_versions
                echo "$LIBUNISTRING_RELEASE" >> _libs_versions
                echo "$NCURSES_RELEASE" >> _libs_versions
                echo "$NGHTTP2_RELEASE" >> _libs_versions
                echo "$OPENLDAP_RELEASE" >> _libs_versions
                echo "$OPENSSL_RELEASE" >> _libs_versions
                echo "$ZLIB_RELEASE" >> _libs_versions
          - restore_cache:
              key: v1-nodeV<<parameters.node-version>>-electronV<<parameters.electron-version>>-nwjsV<<parameters.nwjs-version>>-deps-libs-{{ checksum "_libs_versions" }}-{{ checksum "yarn.lock" }}
          
          - steps: <<parameters.before-build>>
          ####
          # Build
          ####
          - run:
              command: GIT_TAG=$CIRCLE_TAG GIT_COMMIT=$CIRCLE_SHA1 ./scripts/ci/build.sh
              no_output_timeout: 20m
          - steps: <<parameters.after-build>>
          ####
          # Cache
          ####
          - save_cache:
              key: v1-nodeV<<parameters.node-version>>-electronV<<parameters.electron-version>>-nwjsV<<parameters.nwjs-version>>-deps-libs-{{ checksum "_libs_versions" }}-{{ checksum "yarn.lock" }}
              paths:
                - ~/.electron
                - ~/.cache/electron
                - ~/.cache/yarn
                - ~/.node-gyp
                - ~/.nw-gyp
                - ~/deps/brotli/build/<<parameters.brotli-version>>
                - ~/deps/libcurl/build/<<parameters.libcurl-version>>
                - ~/deps/libssh2/build/<<parameters.libssh2-version>>
                - ~/deps/libidn2/build/<<parameters.libidn2-version>>
                - ~/deps/libunistring/build/<<parameters.libunistring-version>>
                - ~/deps/ncurses/build/<<parameters.ncurses-version>>
                - ~/deps/nghttp2/build/<<parameters.nghttp2-version>>
                - ~/deps/openldap/build/<<parameters.openldap-version>>
                - ~/deps/openssl/build/<<parameters.openssl-version>>
                - ~/deps/zlib/build/<<parameters.zlib-version>>

# Great docs
# https://circleci.com/docs/2.0/reusing-config/#getting-started-with-config-reuse

workflows:
  build-test-deploy:
    jobs:
      ####
      # Node 8
      ####
      - build-addon-alpine-and-publish/build-addon:
          name: build-addon-node-8-libcurl-latest
          context: general
          filters:
            tags:
              only: /^v.*/
          node-version: "8"
          libcurl-version: "7.64.1"
          nghttp2-version: "1.33.0"
          openssl-version: "1.0.2r"
          e:
            name: alpine
      - build-addon-alpine-and-publish/build-addon:
          name: build-addon-node-8-libcurl-old
          context: general
          filters:
            tags:
              only: /^v.*/
          node-version: "8"
          libcurl-version: "7.50.0"
          nghttp2-version: "1.33.0"
          openssl-version: "1.0.2r"
          e:
            name: alpine
      ####
      # Node 10
      ####
      - build-addon-alpine-and-publish/build-addon:
          name: build-addon-node-10-libcurl-latest
          context: general
          filters:
            tags:
              only: /^v.*/
          node-version: "10"
          libcurl-version: "7.64.1"
          nghttp2-version: "1.34.0"
          openssl-version: "1.1.0j"
          e:
            name: alpine
      - build-addon-alpine-and-publish/build-addon:
          name: build-addon-node-10-libcurl-old
          context: general
          filters:
            tags:
              only: /^v.*/
          node-version: "10"
          libcurl-version: "7.50.0"
          nghttp2-version: "1.34.0"
          openssl-version: "1.1.0j"
          e:
            name: alpine
      ####
      # Node 12
      ####
      - build-addon-alpine-and-publish/build-addon:
          name: build-addon-node-12-libcurl-latest
          context: general
          filters:
            tags:
              only: /^v.*/
          node-version: "12"
          libcurl-version: "7.64.1"
          nghttp2-version: "1.38.0"
          openssl-version: "1.1.1b"
          e:
            name: alpine
      - build-addon-alpine-and-publish/build-addon:
          name: build-addon-node-12-libcurl-old
          context: general
          filters:
            tags:
              only: /^v.*/
          node-version: "12"
          libcurl-version: "7.50.0"
          nghttp2-version: "1.38.0"
          openssl-version: "1.1.1b"
          e:
            name: alpine
      ####
      # Electron v5
      ####
      - build-addon-alpine-and-publish/build-addon:
          name: build-addon-electron-v5-libcurl-latest
          context: general
          filters:
            tags:
              only: /^v.*/
          electron-version: "5.0.1"
          libcurl-version: "7.64.1"
          nghttp2-version: "1.38.0"
          openssl-version: "1.1.1b"
          e:
            name: debian
      ####
      # Electron v4
      ####
      - build-addon-alpine-and-publish/build-addon:
          name: build-addon-electron-v4-libcurl-latest
          context: general
          filters:
            tags:
              only: /^v.*/
          electron-version: "4.2.0"
          libcurl-version: "7.64.1"
          nghttp2-version: "1.38.0"
          openssl-version: "1.1.1b"
          e:
            name: debian
      ####
      # Electron v3
      ####
      - build-addon-alpine-and-publish/build-addon:
          name: build-addon-electron-v3-libcurl-latest
          context: general
          filters:
            tags:
              only: /^v.*/
          electron-version: "3.1.9"
          libcurl-version: "7.64.1"
          nghttp2-version: "1.38.0"
          openssl-version: "1.1.1b"
          e:
            name: debian
          # Just for reference
          # before-build: *install-deps
      ####
      # Nwjs v0.38
      ####
      - build-addon-alpine-and-publish/build-addon:
          name: build-addon-nwjs-v0.38-libcurl-latest
          context: general
          filters:
            tags:
              only: /^v.*/
          nwjs-version: "0.38.2"
          libcurl-version: "7.64.1"
          nghttp2-version: "1.38.0"
          openssl-version: "1.1.1b"
          e:
            name: debian
      ####
      # Nw.js v0.37
      ####
      - build-addon-alpine-and-publish/build-addon:
          name: build-addon-nwjs-v0.37-libcurl-latest
          context: general
          filters:
            tags:
              only: /^v.*/
          nwjs-version: "0.37.4"
          libcurl-version: "7.64.1"
          nghttp2-version: "1.38.0"
          openssl-version: "1.1.1b"
          e:
            name: debian
